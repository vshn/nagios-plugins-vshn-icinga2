object CheckCommand "icinga2internals" {
  import "plugin-check-command"
  command = [ PluginDir + "/icinga2internals.rb" ]
  arguments = {
    "-H" = "$icinga2internals_host$"
    "-P" = "$icinga2internals_port$"
    "-u" = "$icinga2internals_user$"
    "-p" = "$icinga2internals_password$"
    "-w" = "$icinga2internals_idowarn$"
    "-c" = "$icinga2internals_idocrit$"
    "-g" = "$icinga2internals_influxwarn$"
    "-s" = "$icinga2internals_influxcrit$"
  }
  vars.icinga2internals_host = "$address$"
  vars.icinga2internals_port = "5665"
}

# this one uses the combination with submit_remote to send the check results
# to an offsite icinga2 instance as a passive check result
object CheckCommand "icinga2internals_heartbeat" {
  import "submit_remote"

  vars.icinga2internals_host = "localhost"
  vars.icinga2internals_idowarn = 1000
  vars.icinga2internals_idocrit = 2000
  vars.icinga2internals_influxwarn = 1000
  vars.icinga2internals_influxcrit = 2000

  vars.submit_remote_host = "$address$"
  vars.submit_remote_port = "5665"
  vars.submit_remote_command = PluginDir + "/icinga2internals.rb -H $icinga2internals_host$ -u $icinga2internals_user$ -p $icinga2internals_password$ -w $icinga2internals_idowarn$ -c $icinga2internals_idocrit$ -g $icinga2internals_influxwarn$ -s $icinga2internals_influxcrit$"
}
