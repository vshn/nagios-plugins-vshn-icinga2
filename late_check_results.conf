object CheckCommand "late_check_results" {
  import "dummy"

  vars.late_hostcheck = {{
    var hostname = macro("$host.name$");
    var max_last_check = Math.min(86400, Math.max(300, host.max_check_attempts * host.check_interval * 1.1))
    var last_hostcheck = get_host(hostname).last_check
    if (last_hostcheck < (get_time() - max_last_check)) {
      DateTime(last_hostcheck).to_string()
    }
  }}

  vars.late_services = {{
    var hostname = macro("$host.name$");
    var filter_fn = function(svc) {
      var max_last_check = Math.min(86400, Math.max(300, svc.max_check_attempts * svc.check_interval * 1.1))
      svc.last_check < (get_time() - max_last_check)
    }

    var strip_hostname = function (text) {
      var pos = text.find("!")
      if (pos < 0) {
        text
      } else {
        text.substr(pos + 1)
      }
    }

    var res = [];
    for (svc in get_services(hostname)) {
      var name = strip_hostname(svc.__name);
      if (name != "late_check_results_per_host" && filter_fn(svc)) {
        res.add(name + ", " + DateTime(svc.last_check).to_string())
      }
    };
    res
  }}

  vars.dummy_text = {{
    var late_services = macro("$late_services$");
    var late_hostcheck = macro("$late_hostcheck$");
    if (late_hostcheck) {
      var hostcheck_info = "Last Host Check: " + late_hostcheck
    } else {
      var hostcheck_info = "Host Check up-to-date"
    }
    if (late_services.len() == 0) {
      var servicechecks_info = "No services where check results are late."
    } else {
      var servicechecks_info = "Services with late check results:\n" + late_services.join("\n")
    }
    hostcheck_info + ", " + servicechecks_info
  }}

  vars.dummy_state = {{
    var late_services = macro("$late_services$");
    var late_hostcheck = macro("$late_hostcheck$");
    if (late_services.len() > 1 || late_hostcheck) {
      2
    } else if (late_services.len() == 1) {
      1
    } else {
      0
    }
  }}

}
